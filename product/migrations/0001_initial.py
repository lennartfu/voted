# Generated by Django 4.2.6 on 2023-11-17 10:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import product.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChoicePoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=5)),
                ('members_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('AB', 'Abstimmung'), ('TR', 'Termin'), ('TL', 'Tierlist'), ('RA', 'Rangliste')], editable=False, max_length=2)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('password', models.CharField(blank=True, max_length=50)),
                ('ends_at', models.DateTimeField(blank=True)),
                ('logged_in_only', models.BooleanField(default=False)),
                ('show_result', models.BooleanField(default=False)),
                ('multiple_choice_allowed', models.BooleanField(default=False)),
                ('custom_answers_allowed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateTimePoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=5)),
                ('members_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('AB', 'Abstimmung'), ('TR', 'Termin'), ('TL', 'Tierlist'), ('RA', 'Rangliste')], editable=False, max_length=2)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('password', models.CharField(blank=True, max_length=50)),
                ('ends_at', models.DateTimeField(blank=True)),
                ('logged_in_only', models.BooleanField(default=False)),
                ('show_result', models.BooleanField(default=False)),
                ('mode', models.CharField(choices=[('DAT', 'Datum'), ('UHR', 'Uhrzeit'), ('D&U', 'Datum & Uhrzeit')], editable=False, max_length=3)),
                ('multiple_choice_allowed', models.BooleanField(default=False)),
                ('custom_answers_allowed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RankingPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=5)),
                ('members_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('AB', 'Abstimmung'), ('TR', 'Termin'), ('TL', 'Tierlist'), ('RA', 'Rangliste')], editable=False, max_length=2)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('password', models.CharField(blank=True, max_length=50)),
                ('ends_at', models.DateTimeField(blank=True)),
                ('logged_in_only', models.BooleanField(default=False)),
                ('show_result', models.BooleanField(default=False)),
                ('criterium_best', models.CharField(default='am besten', max_length=50)),
                ('criterium_worst', models.CharField(default='am schlechtesten', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TierlistPoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=5)),
                ('members_only', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('AB', 'Abstimmung'), ('TR', 'Termin'), ('TL', 'Tierlist'), ('RA', 'Rangliste')], editable=False, max_length=2)),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('password', models.CharField(blank=True, max_length=50)),
                ('ends_at', models.DateTimeField(blank=True)),
                ('logged_in_only', models.BooleanField(default=False)),
                ('show_result', models.BooleanField(default=False)),
                ('num_tiers', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TierlistVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='product.tierlistpoll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.user')),
            ],
        ),
        migrations.AddField(
            model_name='tierlistpoll',
            name='members',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_invited', to='product.user'),
        ),
        migrations.AddField(
            model_name='tierlistpoll',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to='product.user'),
        ),
        migrations.AddField(
            model_name='tierlistpoll',
            name='participants',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_participated', to='product.user'),
        ),
        migrations.CreateModel(
            name='TierlistObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to=product.models.object_directory_path)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='product.tierlistpoll')),
            ],
        ),
        migrations.CreateModel(
            name='RankingVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='product.rankingpoll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.user')),
            ],
        ),
        migrations.AddField(
            model_name='rankingpoll',
            name='members',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_invited', to='product.user'),
        ),
        migrations.AddField(
            model_name='rankingpoll',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to='product.user'),
        ),
        migrations.AddField(
            model_name='rankingpoll',
            name='participants',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_participated', to='product.user'),
        ),
        migrations.CreateModel(
            name='RankingObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='product.rankingpoll')),
            ],
        ),
        migrations.CreateModel(
            name='DateTimeVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='product.datetimepoll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.user')),
            ],
        ),
        migrations.AddField(
            model_name='datetimepoll',
            name='members',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_invited', to='product.user'),
        ),
        migrations.AddField(
            model_name='datetimepoll',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to='product.user'),
        ),
        migrations.AddField(
            model_name='datetimepoll',
            name='participants',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_participated', to='product.user'),
        ),
        migrations.CreateModel(
            name='DateTimeObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateTimeField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='product.datetimepoll')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='product.choicepoll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='product.user')),
            ],
        ),
        migrations.AddField(
            model_name='choicepoll',
            name='members',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_invited', to='product.user'),
        ),
        migrations.AddField(
            model_name='choicepoll',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_created', to='product.user'),
        ),
        migrations.AddField(
            model_name='choicepoll',
            name='participants',
            field=models.ManyToManyField(related_name='%(app_label)s_%(class)s_participated', to='product.user'),
        ),
        migrations.CreateModel(
            name='ChoiceObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=50)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objects', to='product.choicepoll')),
            ],
        ),
    ]
